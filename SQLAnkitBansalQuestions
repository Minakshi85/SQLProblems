-- Problem 1 Solution

Q1 : Select team,sum(no_of_wins) + sum(no_of_losses) as total_match,  sum(no_of_wins) as won, sum(no_of_losses) as lost
from
(
select team_1 as team,
case when team_1 =winner then 1 else 0 end  as 'no_of_wins',
case when team_1 !=winner then 1 else 0 end  as 'no_of_losses'
from icc_world_cup
union all
select team_2 as team,
case when team_2 =winner then 1 else 0 end  as 'no_of_wins',
case when team_2 !=winner then 1 else 0 end  as 'no_of_losses'
from icc_world_cup
)
group by team
order by won desc

Q2 : Select team, count(*) as total_match,  sum(no_of_wins) as won, count(*) - sum(no_of_wins) as lost
from
(
select team_1 as team,
case when team_1 =winner then 1 else 0 end  as 'no_of_wins'
from icc_world_cup
union all
select team_2 as team,
case when team_2 =winner then 1 else 0 end  as 'no_of_wins'
from icc_world_cup
)
group by team
order by won desc

--- Problem 2 Find repeat customers and new customers
Insert and create Statement
create table customer_orders (
order_id integer,
customer_id integer,
order_date date,
order_amount integer
);

insert into customer_orders values(1,100,cast('2022-01-01' as date),2000),(2,200,cast('2022-01-01' as date),2500),(3,300,cast('2022-01-01' as date),2100)
,(4,100,cast('2022-01-02' as date),2000),(5,400,cast('2022-01-02' as date),2200),(6,500,cast('2022-01-02' as date),2700)
,(7,100,cast('2022-01-03' as date),3000),(8,400,cast('2022-01-03' as date),1000),(9,600,cast('2022-01-03' as date),3000);


Q1 : with cte as 
(select customer_id, min(order_date) as min_date
from Customer_orders
group by customer_id)

select o.order_date,
sum(case when min_date = order_date then 1 else 0 end) as new_customer,
sum(case when min_date < order_date then 1 else 0 end) as repeat_customer,
sum(case when min_date = order_date then order_amount else 0 end) as new_customer_order_amount,
sum(case when min_date < order_date then order_amount else 0 end) as repeate_customer_order_amount
from customer_orders o
inner join cte
on cte.customer_id = o.customer_id
group by order_date

// Problem 3 : resource used in office with total visited and most visited floors
create table entries ( 
name varchar(20),
address varchar(20),
email varchar(20),
floor int,
resources varchar(10));

insert into entries 
values ('A','Bangalore','A@gmail.com',1,'CPU'),('A','Bangalore','A1@gmail.com',1,'CPU'),('A','Bangalore','A2@gmail.com',2,'DESKTOP')
,('B','Bangalore','B@gmail.com',2,'DESKTOP'),('B','Bangalore','B1@gmail.com',2,'DESKTOP'),('B','Bangalore','B2@gmail.com',1,'MONITOR')

with floor_visits as
(
Select name, floor, count(1) as most_visited_floor,
rank() over(partition by name order by count(1) desc) as rn
from entries
group by name, floor),

total_visits as
(
Select name,  count(1) as total_visits, string.agg(resources,', ') as resources_used
from entries
group by name
)

Select fv.name, tv.total_visits, fv.floor as most_visited_floor, tv.resources_used
from floor_visits as fv
inner join total_visits as tv
on fv.name = tv.name
where fv.rn =1





